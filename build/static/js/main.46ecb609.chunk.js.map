{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","console","log","personToDelete","delete","SearchFilter","search","func","value","onChange","NewPerson","addPerson","newName","handlenewName","newNumber","handleNewNumber","onSubmit","type","Person","person","remove","name","number","onClick","Persons","personsView","removePerson","map","Notification","message","className","App","useState","persons","setPersons","setPV","setnewName","setNewNumber","setSearch","succes","setSuccess","useEffect","personService","p","length","htmlFor","event","preventDefault","personsTemp","filter","includes","target","found","personObject","previous","find","forEach","element","window","confirm","setTimeout","returnedPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46ecb609.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request =axios.get(baseUrl) \r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject) \r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => {\r\n        console.log(response.data)\r\n        return response.data\r\n    })\r\n}\r\n\r\nconst remove = personToDelete => {\r\n    const request = axios.delete(`${baseUrl}/${personToDelete.id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    remove\r\n}","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport './App.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n    // lista henkilöiden näyttämiseksi\n    const [ personsView, setPV] = useState([...persons])\n    const [ newName, setnewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ search, setSearch ] = useState('')\n    const [succes, setSuccess] = useState(null)\n\n    useEffect(() => {\n      personService\n      .getAll()\n      .then(p => {\n        setPersons(p)\n        setPV(p)\n      })\n  }, [])\n  console.log('render', persons.length, 'persons')\n\n\n\n  const getPersons = () => {\n    personService\n    .getAll()\n    .then(p => {\n      setPersons(p)\n      setPV(p)\n    })\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    var found = false;\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const previous = personsView.find(person => person.name === newName)\n\n    persons.forEach(element => {\n      if (element.name === personObject.name) {\n        if (window.confirm(`${personObject.name} is already added to phonebook, replace the old number with a new one?` )) {\n\n        personObject.id = element.id\n          personService\n          .update(previous.id, personObject)\n          .then(getPersons(),\n          setSuccess(\n            `'${personObject.name}''s nubmer was replaced succesfully`\n          ),\n          setTimeout(() => {\n            setSuccess(null)\n          }, 5000)\n          )\n        }\n\n        found = true\n      }\n    });\n    if (found === true) return\n    personService\n    .create(personObject)\n    .then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson))\n      setPV(persons.concat(returnedPerson))\n      setnewName('')\n      setNewNumber('')\n      setSuccess(`'${personObject.name}' was added successfully`)\n      setTimeout(() => {\n        setSuccess(null)\n      }, 5000);\n    })\n  }\n\n\n  const removePerson = (personToDelete) => {\n    if (window.confirm(`Do you really want do delete ${personToDelete.name} ?` )) {\n      personService\n      .remove(personToDelete)\n      .then(() =>\n        setPV(personsView.filter(p => p.id !== personToDelete.id)),\n        setSuccess(\n          `Person '${personToDelete.name}' was deleted succesfully`\n        ),\n        setTimeout(() => {\n          setSuccess(null)\n        }, 5000)\n      )\n    }\n    return;\n  }\n\n  const handlenewName = (event) => {\n    setnewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearch = (event) => {\n    event.preventDefault()\n    var personsTemp = persons.filter((person) => person.name.includes(event.target.value))\n    setPV(personsTemp)\n    setSearch(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={succes}></Notification>\n      <label htmlFor=\"name\">filter shown with</label>\n      <SearchFilter search={search} func={handleSearch} />\n      <h2>add a new</h2>\n      <NewPerson addPerson={addPerson} newName={newName}\n      handlenewName={handlenewName} newNumber={newNumber}\n      handleNewNumber={handleNewNumber}  />\n      <h2>Numbers</h2>\n      <Persons personsView={personsView} removePerson={removePerson}/>\n    </div>\n  )\n}\n\nconst SearchFilter = ({search, func}) => {\n  return (\n    <input value={search} onChange={func} />\n  )\n}\n\nconst NewPerson = ({addPerson, newName, handlenewName, newNumber, handleNewNumber}) => {\n  return (\n    <form onSubmit={addPerson}>\n        <div>\n          name: <input\n          value={newName}\n          onChange={handlenewName}/>  \n        </div>\n        <div>\n          number: <input\n          value={newNumber}\n          onChange={handleNewNumber}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\nconst Person = ({person, remove}) => {\n  return (\n    <div>\n      {person.name}: {person.number} <button onClick={remove}>Delete</button>\n    </div>\n  )\n}\n\nconst Persons = ({personsView, removePerson}) => {\n  return (\n    <div>\n      {personsView.map(person => \n        <Person key={person.id} person={person} remove={() =>\n        removePerson(person)}/>\n      )}\n    </div>\n  )\n}\n\nconst Notification = ({message}) => {\n  if (message === null) {return null}\n\n  return (\n    <div className=\"good\">\n      {message}\n    </div>\n  )\n}\n\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}